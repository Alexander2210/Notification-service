services:
  notification-postgres:
    image: postgres:16
    container_name: notification-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notificationdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - notification-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d notificationdb"]
      interval: 5s
      timeout: 5s
      retries: 20

  app:
    build: .
    container_name: notification-app
    ports:
      - "8080:8080"
    depends_on:
      notification-postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notification-postgres:5432/notificationdb?currentSchema=notification_service&searchpath=notification_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    volumes:
      - type: bind
        source: ./logs
        target: /app/logs
    networks:
      - notification-network

volumes:
  postgres_data:

networks:
  notification-network: